Objetos do navegador: 

→objetos internos que nos ajudam a melhorar a interatividade com o usuário.
---window; janela de visualização

---navigator; info e recursos do próprio navegador
    --userAgent, language, geolocation, online == true?

---document; info e recursos da própria página
    --document.getElementById('')

→ parser = analisador de código

no DOM, tudo é um node {
    > o documento inteiro é um node 
    > todo elemento é um node
    > o texto doselementos são nodes
    > comment node, attribute node
    EVERYTHING IS A NODE (.nodeType, .nodeName, .nodeValue)

    quantidade de filhos: childElementCount
}

formulários {
    o elemento <form> engloba todos os campos e define o que deve ser feito com o formulário. Geralmente possui dois atributos: 

        action- define o URL para o qual os dados do form devem ser enviados
        method- define o método HTTP que será usado no envio dos dados (get/post)
}

JSON {
    padrão para a representação de dados; JavaScript Object Notation

    >algumas vezes, precisamos transformar um objeto JSON em uma string para enviarmos por um formulário, pela rede ou para armazenarmos localmente
        >JSON.stringify(variável);
        >JSON.parse(variável_string);
}

armazenamento local {
    gardar informação no navegador do usuário. Essas informações podem ser recuperadas mais tarde, quando ele retornar ao nosso site. 

        →Tipos de ino que podem ser guardadas
            -dados de acesso, como o nome de usuário
            -estado da aplicação, como a última página que ele visitou
            -informações de configuração do site, que personalizam a sua experiência
            -dados para funcionamento off-line

        →API Web Storage
            -window.localStorage : Armazenamento permanente dos dados
            -window.sessionStorage : Armazenamento por uma sessão (mesma janela e mesma aba, inclusive durante recargas da página)
}


AJAX = Asynchronou JavaScript and XML {
    várias tecnologias combinadas
        -apresentação baseada em padrões como HTML e CSS
        -exibição dinâmica através do DOM
        -troca e manipulação de dados com XML(ou JSON)
        -recuperação assíncrona de dados com XMLHttpRequest (coração do Ajax é o objeto XMLHttpRequest);
            {
                let xhttp = new XMLHttpRequest();
            }
        -JavaScript para ajuntar tudo


        /**
            function iniciaAjax() {

                let xhttp = null;
                try {
                    xhttp = new XMLHttpRequest();
                } catch (e) {
                    alert("Seu navegador não suporta Ajax");
                    return false;
                }
            }
        **/

        -A propriedade onreadystatechange do objeto XMLHttpRequest é chamada a cada vez que o estado da resposta (readyState) muda
}

Application Programming Interface {
    a set of functions and procedures allowing the creation of applications that access the features or data of an operating system, application, or other service.
        
        geolocalização{
            gps no aparelho
            SSID do roteador
            triangulação de antenas de celular

            if (!!navigator.geolocation)
                // use
            else
                //not available 

                -tratamento de erro, geolocal contínua
        }
}

indexedDB {
    
}



[caniuse.com → provides up-to-date browser support tables for support of front-end web technologies on desktop and mobile web browsers.]